name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  push_to_registry:
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_KEY }}

      - uses: oven-sh/setup-bun@v2
        name: Setup bun
        with:
          bun-version: latest
      - uses: fregante/setup-git-user@v2
        name: Setup git user
      - name: Install dependencies
        run: |
          bun install
      - name: Create new release
        run: |
          bun release
      - name: Read version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "Current version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
      - name: Install yq
        run: sudo pip install yq
      - name: Update version in values.yaml
        run: |
          yq -i -y '.appVersion = "${{ env.version }}"' ./helm/Chart.yaml
      - name: Commit changes and create tag
        run: |
          git remote set-url origin git@github.com:stormix/dwi-server.git
          git add package.json CHANGELOG.md helm/Chart.yaml
          git commit -m "chore(release): ${{ env.version }}"
          git tag ${{ env.version }}
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: stormix/dwi-server
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dwi-server:${{ env.version }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Push new release
        run: |
          git push --follow-tags origin main

  sync_application:
    name: Sync application
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Sync ArgoCD Application
        uses: omegion/argocd-actions@v1
        with:
          address: "argocd.k8s.stormix.dev"
          token: ${{ secrets.ARGOCD_TOKEN }}
          action: sync
          appName: "dwi-server"

      - name: Sync ArgoCD Application
        uses: omegion/argocd-actions@v1
        with:
          address: "argocd.k8s.stormix.dev"
          token: ${{ secrets.ARGOCD_TOKEN }}
          action: sync
          appName: "dwi-server"
